<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.warmheart.workerunion.server.dao.CertificateMapper">
	<resultMap id="BaseResultMap" type="top.warmheart.workerunion.server.model.Certificate">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="staff_id" jdbcType="BIGINT" property="staffId" />
		<result column="certificate_serie_id" jdbcType="BIGINT" property="certificateSerieId" />
		<result column="certificate_serie_name" jdbcType="VARCHAR" property="certificateSerieName" />
		<result column="certificate_type_id" jdbcType="BIGINT" property="certificateTypeId" />
		<result column="certificate_type_name" jdbcType="VARCHAR" property="certificateTypeName" />
		<result column="num" jdbcType="VARCHAR" property="num" />
		<result column="valid_date" jdbcType="DATE" property="validDate" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<resultMap id="CertificateDtoMap" type="top.warmheart.workerunion.server.dto.CertificateDto">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="staff_id" jdbcType="BIGINT" property="staffId" />
		<result column="staff_name" jdbcType="VARCHAR" property="staffName" />
		<result column="staff_job_no" jdbcType="VARCHAR" property="staffJobNo" />
		<result column="staff_id_card_no" jdbcType="VARCHAR" property="staffIdCardNo" />
		<result column="certificate_serie_id" jdbcType="BIGINT" property="certificateSerieId" />
		<result column="certificate_serie_name" jdbcType="VARCHAR" property="certificateSerieName" />
		<result column="certificate_type_id" jdbcType="BIGINT" property="certificateTypeId" />
		<result column="certificate_type_name" jdbcType="VARCHAR" property="certificateTypeName" />
		<result column="num" jdbcType="VARCHAR" property="num" />
		<result column="valid_date" jdbcType="DATE" property="validDate" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigInteger">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		delete from certificate
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="top.warmheart.workerunion.server.model.Certificate">
		<selectKey keyProperty="id" order="AFTER" resultType="java.math.BigInteger">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into certificate (company_id, staff_id, certificate_serie_id,
		certificate_serie_name, certificate_type_id,
		certificate_type_name, num, valid_date,
		cst_create, cst_modified, is_del
		)
		values (#{companyId,jdbcType=BIGINT},
		#{staffId,jdbcType=BIGINT}, #{certificateSerieId,jdbcType=BIGINT},
		#{certificateSerieName,jdbcType=VARCHAR},
		#{certificateTypeId,jdbcType=BIGINT},
		#{certificateTypeName,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR},
		#{validDate,jdbcType=DATE},
		now(), now(), false
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="top.warmheart.workerunion.server.model.Certificate">
		update certificate
		set company_id = #{companyId,jdbcType=BIGINT},
		staff_id = #{staffId,jdbcType=BIGINT},
		certificate_serie_id = #{certificateSerieId,jdbcType=BIGINT},
		certificate_serie_name = #{certificateSerieName,jdbcType=VARCHAR},
		certificate_type_id =
		#{certificateTypeId,jdbcType=BIGINT},
		certificate_type_name = #{certificateTypeName,jdbcType=VARCHAR},
		num =
		#{num,jdbcType=VARCHAR},
		valid_date = #{validDate,jdbcType=DATE},
		cst_modified = now()
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="deleteById" parameterType="java.math.BigInteger">
		update certificate
		set is_del=true,
		cst_modified = now()
		where id =
		#{id,jdbcType=BIGINT} and is_del=false
	</update>
	<select id="selectByPrimaryKey" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, staff_id, certificate_serie_id, certificate_serie_name, certificate_type_id,
		certificate_type_name, num, valid_date, cst_create, cst_modified, is_del
		from certificate
		where id =
		#{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, staff_id, certificate_serie_id, certificate_serie_name, certificate_type_id,
		certificate_type_name, num, valid_date, cst_create, cst_modified, is_del
		from certificate
	</select>
	<select id="selectDetailById" resultMap="CertificateDtoMap">
		select c.id, c.company_id, c.staff_id, c.certificate_serie_id,
		c.certificate_serie_name, c.certificate_type_id,
		c.certificate_type_name, c.num, c.valid_date, c.cst_create,
		c.cst_modified, c.is_del, s.name as staff_name, s.job_no as staff_job_no, s.id_card_no as staff_id_card_no
		from
		certificate c join staff s on s.id=c.staff_id where c.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="countByFuzzy" resultType="java.lang.Integer">
		select count(distinct c.id) from certificate c join staff s on s.id=c.staff_id where c.company_id=#{certificateDto.companyId,
		jdbcType=BIGINT}
		<if test="certificateDto.staffIdCardNo != null and certificateDto.staffIdCardNo != ''">
			and s.id_card_no like CONCAT('%',#{certificateDto.staffIdCardNo},'%')
		</if>
		<if test="certificateDto.staffName != null and certificateDto.staffName != ''">
			and s.name like CONCAT('%',#{certificateDto.staffName},'%')
		</if>
		<if test="certificateDto.num != null and certificateDto.num != ''">
			and c.num like CONCAT('%',#{certificateDto.num},'%')
		</if>
		<if test="certificateDto.certificateTypeName != null and certificateDto.certificateTypeName != ''">
			and c.certificate_type_name like CONCAT('%',#{certificateDto.certificateTypeName},'%')
		</if>
		<if test="certificateDto.certificateSerieId != null">
			and c.certificate_serie_id = #{certificateDto.certificateSerieId}
		</if>
		<if test="certificateDto.validDate != null">
			and c.valid_date &gt;= #{certificateDto.validDate}
		</if>
		and c.is_del = false
	</select>

	<select id="pageByFuzzy" resultMap="CertificateDtoMap">
		select c.id, c.company_id, c.staff_id, c.certificate_serie_id,
		c.certificate_serie_name, c.certificate_type_id,
		c.certificate_type_name, c.num, c.valid_date, c.cst_create,
		c.cst_modified, c.is_del, s.name as staff_name, s.job_no as
		staff_job_no, s.id_card_no as staff_id_card_no
		from (select distinct c2.id from certificate c2 join staff s2 on s2.id=c2.staff_id
		where c2.company_id=#{certificateDto.companyId,
		jdbcType=BIGINT}
		<if test="certificateDto.staffIdCardNo != null and certificateDto.staffIdCardNo != ''">
			and s2.id_card_no like CONCAT('%',#{certificateDto.staffIdCardNo},'%')
		</if>
		<if test="certificateDto.staffName != null and certificateDto.staffName != ''">
			and s2.name like CONCAT('%',#{certificateDto.staffName},'%')
		</if>
		<if test="certificateDto.num != null and certificateDto.num != ''">
			and c2.num like CONCAT('%',#{certificateDto.num},'%')
		</if>
		<if test="certificateDto.certificateTypeName != null and certificateDto.certificateTypeName != ''">
			and c2.certificate_type_name like CONCAT('%',#{certificateDto.certificateTypeName},'%')
		</if>
		<if test="certificateDto.certificateSerieId != null">
			and c2.certificate_serie_id = #{certificateDto.certificateSerieId}
		</if>
		<if test="certificateDto.validDate != null">
			and c2.valid_date &gt;= #{certificateDto.validDate}
		</if>
		and c2.is_del = false order by c2.id asc limit #{page.frontIndex},#{page.size})temp, certificate c join staff s on
		s.id=c.staff_id where temp.id=c.id order by c.id asc
	</select>
	<select id="selectListByStaffId" resultMap="BaseResultMap">
		select id, company_id, staff_id, certificate_serie_id, certificate_serie_name, certificate_type_id,
		certificate_type_name, num, valid_date, cst_create, cst_modified, is_del
		from certificate where staff_id=#{staffId,jdbcType=BIGINT} and is_del=false
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.warmheart.workerunion.server.dao.SupplierMapper">
	<resultMap id="BaseResultMap" type="top.warmheart.workerunion.server.model.Supplier">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="num" jdbcType="VARCHAR" property="num" />
		<result column="supplier_grade_id" jdbcType="BIGINT" property="supplierGradeId" />
		<result column="supplier_grade_name" jdbcType="VARCHAR" property="supplierGradeName" />
		<result column="valid_date" jdbcType="DATE" property="validDate" />
		<result column="contact_person" jdbcType="VARCHAR" property="contactPerson" />
		<result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<resultMap id="SupplierDtoMap" type="top.warmheart.workerunion.server.dto.SupplierDto">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="num" jdbcType="VARCHAR" property="num" />
		<result column="supplier_grade_id" jdbcType="BIGINT" property="supplierGradeId" />
		<result column="supplier_grade_name" jdbcType="VARCHAR" property="supplierGradeName" />
		<result column="supplier_qualification_id" jdbcType="BIGINT" property="supplierQualificationId" />
		<result column="supplier_qualification_name" jdbcType="VARCHAR" property="supplierQualificationName" />
		<result column="valid_date" jdbcType="DATE" property="validDate" />
		<result column="contact_person" jdbcType="VARCHAR" property="contactPerson" />
		<result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigInteger">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		delete from supplier
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="top.warmheart.workerunion.server.model.Supplier">
		<selectKey keyProperty="id" order="AFTER" resultType="java.math.BigInteger">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into supplier (company_id, name, num,
		supplier_grade_id, supplier_grade_name, valid_date,
		contact_person, contact_phone, cst_create,
		cst_modified, is_del)
		values (#{companyId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR},
		#{supplierGradeId,jdbcType=BIGINT}, #{supplierGradeName,jdbcType=VARCHAR}, #{validDate,jdbcType=DATE},
		#{contactPerson,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, now(),
		now(), false)
	</insert>
	<update id="updateByPrimaryKey" parameterType="top.warmheart.workerunion.server.model.Supplier">
		update supplier
		set company_id = #{companyId,jdbcType=BIGINT},
		name = #{name,jdbcType=VARCHAR},
		num = #{num,jdbcType=VARCHAR},
		supplier_grade_id = #{supplierGradeId,jdbcType=BIGINT},
		supplier_grade_name = #{supplierGradeName,jdbcType=VARCHAR},
		valid_date = #{validDate,jdbcType=DATE},
		contact_person = #{contactPerson,jdbcType=VARCHAR},
		contact_phone = #{contactPhone,jdbcType=VARCHAR},
		cst_modified = now()
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="deleteById" parameterType="java.math.BigInteger">
		update supplier
		set
		cst_modified = now(),
		is_del = true
		where id = #{id,jdbcType=BIGINT} and is_del=false
	</update>
	<select id="selectByPrimaryKey" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, name, num, supplier_grade_id, supplier_grade_name, valid_date,
		contact_person, contact_phone, cst_create, cst_modified, is_del
		from supplier
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, name, num, supplier_grade_id, supplier_grade_name, valid_date,
		contact_person, contact_phone, cst_create, cst_modified, is_del
		from supplier
	</select>
	<select id="selectByCompanyAndNum" resultMap="BaseResultMap">
		select id, company_id, name, num, supplier_grade_id, supplier_grade_name, valid_date,
		contact_person, contact_phone, cst_create, cst_modified, is_del
		from supplier where company_id=#{companyId,jdbcType=BIGINT} and num=#{num, jdbcType=VARCHAR}
	</select>

	<!-- 获取符合模糊搜索的供应商信息个数 -->
	<select id="countByFuzzy" resultType="java.lang.Integer">
		select count(distinct s.id) from supplier s 
		<if test="supplierDto.supplierQualificationId != null">
			join supplier_has_supplier_qualification ssq on
		ssq.supplier_id= s.id and ssq.supplier_qualification_id = #{supplierDto.supplierQualificationId}
		</if>
		where
		s.company_id=#{supplierDto.companyId} and s.is_del=false
		<if test="supplierDto.num != null and supplierDto.num != ''">
			and s.num like CONCAT('%',#{supplierDto.num},'%')
		</if>
		<if test="supplierDto.name != null and supplierDto.name != ''">
			and s.name like CONCAT('%',#{supplierDto.name},'%')
		</if>
		<if test="supplierDto.validDate != null">
			and s.valid_date &lt;= #{supplierDto.validDate}
		</if>
	</select>

	<!-- 获取符合模糊搜索的供应商信息列表 -->
	<select id="pageByFuzzy" resultMap="SupplierDtoMap">
		select s.id, s.company_id, s.name, s.num, s.supplier_grade_id, s.supplier_grade_name, s.valid_date,
		s.contact_person, s.contact_phone, s.cst_create, s.cst_modified, s.is_del, ifnull(group_concat(distinct sq.name),"") as
		supplier_qualification_name
		from supplier s left join supplier_has_supplier_qualification ssq on ssq.supplier_id= s.id left join
		supplier_qualification sq on sq.id=ssq.supplier_qualification_id, (select distinct s2.id from supplier s2 
		<if test="supplierDto.supplierQualificationId != null">
			join supplier_has_supplier_qualification ssq2 on
		ssq2.supplier_id= s2.id and ssq2.supplier_qualification_id = #{supplierDto.supplierQualificationId}
		</if>
		where
		s2.company_id=#{supplierDto.companyId} and s2.is_del=false
		<if test="supplierDto.num != null and supplierDto.num != ''">
			and s2.num like CONCAT('%',#{supplierDto.num},'%')
		</if>
		<if test="supplierDto.name != null and supplierDto.name != ''">
			and s2.name like CONCAT('%',#{supplierDto.name},'%')
		</if>
		<if test="supplierDto.validDate != null">
			and s2.valid_date &lt;= #{supplierDto.validDate}
		</if>
		group by s2.id order by s2.num asc limit #{page.frontIndex},#{page.size})temp where s.id=temp.id group by s.id order
		by s.num asc
	</select>
</mapper>
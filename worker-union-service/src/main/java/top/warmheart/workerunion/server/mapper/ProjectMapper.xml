<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.warmheart.workerunion.server.dao.ProjectMapper">
	<resultMap id="BaseResultMap" type="top.warmheart.workerunion.server.model.Project">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="num" jdbcType="VARCHAR" property="num" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="constructer_name" jdbcType="VARCHAR" property="constructerName" />
		<result column="designer_name" jdbcType="VARCHAR" property="designerName" />
		<result column="superviser_name" jdbcType="VARCHAR" property="superviserName" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="scale" jdbcType="VARCHAR" property="scale" />
		<result column="bid_duration" jdbcType="INTEGER" property="bidDuration" />
		<result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
		<result column="collapse_status" jdbcType="VARCHAR" property="collapseStatus" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="bid_price" jdbcType="DECIMAL" property="bidPrice" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigInteger">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		delete from project
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="top.warmheart.workerunion.server.model.Project">
		<selectKey keyProperty="id" order="AFTER" resultType="java.math.BigInteger">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into project (company_id, num, name,
		constructer_name, designer_name, superviser_name,
		address, type, scale,
		bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del)
		values (#{companyId,jdbcType=BIGINT}, #{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{constructerName,jdbcType=VARCHAR}, #{designerName,jdbcType=VARCHAR}, #{superviserName,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{scale,jdbcType=VARCHAR},
		#{bidDuration,jdbcType=INTEGER}, #{fileStatus,jdbcType=VARCHAR}, #{collapseStatus,jdbcType=VARCHAR},
		now(), now(), #{bidPrice,jdbcType=DECIMAL},
		#{memo,jdbcType=VARCHAR}, false)
	</insert>
	<update id="updateByPrimaryKey" parameterType="top.warmheart.workerunion.server.model.Project">
		update project
		set company_id = #{companyId,jdbcType=BIGINT},
		num = #{num,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		constructer_name = #{constructerName,jdbcType=VARCHAR},
		designer_name = #{designerName,jdbcType=VARCHAR},
		superviser_name = #{superviserName,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		scale = #{scale,jdbcType=VARCHAR},
		bid_duration = #{bidDuration,jdbcType=INTEGER},
		file_status = #{fileStatus,jdbcType=VARCHAR},
		collapse_status = #{collapseStatus,jdbcType=VARCHAR},
		cst_modified = now(),
		bid_price = #{bidPrice,jdbcType=DECIMAL},
		memo = #{memo,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, num, name, constructer_name, designer_name, superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status, cst_create, cst_modified,
		bid_price, memo, is_del
		from project
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey4Update" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		select id, company_id, num, name, constructer_name, designer_name, superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status, cst_create, cst_modified,
		bid_price, memo, is_del
		from project
		where id = #{id,jdbcType=BIGINT} for update
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, num, name, constructer_name, designer_name, superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status, cst_create, cst_modified,
		bid_price, memo, is_del
		from project
	</select>
	<select id="selectListSimpleByCompanyId" resultMap="BaseResultMap">
		select id, company_id, num, name, constructer_name, designer_name, superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status, cst_create, cst_modified,
		bid_price, memo, is_del
		from project where company_id=#{companyId, jdbcType=BIGINT} and is_del=false
	</select>

	<!-- 根据项目编号获取项目信息 -->
	<select id="selectByNum" resultMap="BaseResultMap">
		select id, company_id, num, name, constructer_name, designer_name,
		superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del
		from project where company_id=#{companyId,jdbcType=BIGINT} and num=#{num,jdbcType=VARCHAR} and
		is_del=false
	</select>

	<!-- 获取所有项目数量 -->
	<select id="countAll" resultType="java.lang.Integer">
		select count(distinct id) from project where
		company_id=#{companyId,jdbcType=BIGINT} and
		is_del=false
	</select>

	<!-- 获取分页项目信息列表 -->
	<select id="pageAll" resultMap="BaseResultMap">
		select p.id, p.company_id, num, name, constructer_name, designer_name,
		superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del
		from project p,(select distinct id from project where
		company_id=#{companyId,jdbcType=BIGINT} and
		is_del=false order by cst_create
		desc limit
		#{page.frontIndex},#{page.size})temp where p.id=temp.id order by cst_create
		desc
	</select>

	<!-- 获取指定状态及年份项目数量 -->
	<select id="countByStatusAndYear" resultType="java.lang.Integer">
		select count(distinct id) from project where
		company_id=#{companyId,jdbcType=BIGINT} and file_status=#{fileStatus,jdbcType=VARCHAR} and (cst_create between
		#{yearMin,jdbcType=TIMESTAMP} and #{yearMax,jdbcType=TIMESTAMP}) and is_del=false
	</select>

	<!-- 获取指定状态及年份分页项目信息列表 -->
	<select id="pageByStatusAndYear" resultMap="BaseResultMap">
		select
		p.id, p.company_id, num, name, constructer_name, designer_name,
		superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del
		from project p,(select distinct id from project where
		company_id=#{companyId,jdbcType=BIGINT} and
		file_status=#{fileStatus,jdbcType=VARCHAR} and (cst_create between
		#{yearMin,jdbcType=TIMESTAMP} and
		#{yearMax,jdbcType=TIMESTAMP}) and is_del=false order by cst_create
		desc limit
		#{page.frontIndex},#{page.size})temp
		where p.id=temp.id order by cst_create desc
	</select>

	<!-- 获取指定状态项目数量 -->
	<select id="countByStatus" resultType="java.lang.Integer">
		select count(distinct id) from project where
		company_id=#{companyId,jdbcType=BIGINT}
		and file_status=#{fileStatus,jdbcType=VARCHAR} and is_del=false
	</select>

	<!-- 获取指定状态分页项目信息列表 -->
	<select id="pageByStatus" resultMap="BaseResultMap">
		select
		p.id, p.company_id, num, name, constructer_name, designer_name,
		superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del
		from project p,(select distinct id from project where
		company_id=#{companyId,jdbcType=BIGINT} and
		file_status=#{fileStatus,jdbcType=VARCHAR} and is_del=false order by
		cst_create
		desc limit
		#{page.frontIndex},#{page.size})temp where p.id=temp.id order by
		cst_create desc
	</select>

	<!-- 获取指定年份项目数量 -->
	<select id="countByYear" resultType="java.lang.Integer">
		select count(distinct id) from project where
		company_id=#{companyId,jdbcType=BIGINT}
		and (cst_create between #{yearMin} and #{yearMax}) and is_del=false
	</select>

	<!-- 获取指定年份分页项目信息列表 -->
	<select id="pageByYear" resultMap="BaseResultMap">
		select
		p.id, p.company_id, num, name, constructer_name, designer_name,
		superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status,
		cst_create, cst_modified, bid_price,
		memo, is_del
		from project p,(select distinct id from project where
		company_id=#{companyId,jdbcType=BIGINT} and
		(cst_create between #{yearMin,jdbcType=TIMESTAMP} and
		#{yearMax,jdbcType=TIMESTAMP}) and is_del=false order by
		cst_create
		desc limit #{page.frontIndex},#{page.size})temp
		where p.id=temp.id order by cst_create desc
	</select>

	<!-- 获取员工所属所有项目数量 -->
	<select id="countAllEx" resultType="java.lang.Integer">
		select count(distinct p.id) from project p join project_team pt on
		pt.staff_id=
		#{staffId,jdbcType=BIGINT} and pt.project_id=p.id
		and p.company_id=#{companyId,jdbcType=BIGINT} and
		p.is_del=false
	</select>

	<!-- 获取分页员工所属的项目信息列表 -->
	<select id="pageAllEx" resultMap="BaseResultMap">
		select p.id, p.company_id, p.num, p.name, p.constructer_name, p.designer_name,
		p.superviser_name,
		p.address, p.type, p.scale, p.bid_duration, p.file_status, p.collapse_status,
		p.cst_create,
		p.cst_modified, p.bid_price, p.memo, p.is_del
		from project p,(select distinct p2.id from project p2 join project_team
		pt on
		pt.staff_id= #{staffId,jdbcType=BIGINT} and pt.project_id=p2.id
		and p2.company_id=#{companyId,jdbcType=BIGINT} and
		p2.is_del=false order by id desc limit
		#{page.frontIndex},#{page.size})temp where p.id=temp.id order by p.id desc
	</select>

	<!-- 获取指定状态及年份的员工所属项目数量 -->
	<select id="countByStatusAndYearEx" resultType="java.lang.Integer">
		select count(distinct p.id) from project p join project_team pt
		on pt.staff_id= #{staffId,jdbcType=BIGINT} and
		pt.project_id=p.id
		and p.company_id=#{companyId,jdbcType=BIGINT} and
		p.file_status=#{fileStatus,jdbcType=VARCHAR} and (p.cst_create between
		#{yearMin,jdbcType=TIMESTAMP} and
		#{yearMax,jdbcType=TIMESTAMP}) and p.is_del=false
	</select>

	<!-- 获取指定状态及年份分页员工所属项目信息列表 -->
	<select id="pageByStatusAndYearEx" resultMap="BaseResultMap">
		select p.id, p.company_id, p.num, p.name, p.constructer_name,
		p.designer_name, p.superviser_name,
		p.address, p.type, p.scale, p.bid_duration, p.file_status, p.collapse_status,
		p.cst_create, p.cst_modified, p.bid_price, p.memo, p.is_del
		from project p,(select distinct p2.id from project p2 join
		project_team pt on
		pt.staff_id= #{staffId,jdbcType=BIGINT} and pt.project_id=p2.id
		and
		p2.company_id=#{companyId,jdbcType=BIGINT} and p2.file_status=#{fileStatus,jdbcType=VARCHAR} and (p2.cst_create
		between #{yearMin,jdbcType=TIMESTAMP} and #{yearMax,jdbcType=TIMESTAMP}) and p2.is_del=false order by id desc limit
		#{page.frontIndex},#{page.size})temp where p.id=temp.id order by p.id desc
	</select>

	<!-- 获取指定状态员工所属项目数量 -->
	<select id="countByStatusEx" resultType="java.lang.Integer">
		select count(distinct p.id) from project p join project_team pt on
		pt.staff_id=
		#{staffId,jdbcType=BIGINT} and pt.project_id=p.id
		and p.company_id=#{companyId,jdbcType=BIGINT} and
		p.file_status=#{fileStatus,jdbcType=VARCHAR} and p.is_del=false
	</select>

	<!-- 获取指定状态分页员工所属的项目信息列表 -->
	<select id="pageByStatusEx" resultMap="BaseResultMap">
		select p.id, p.company_id, p.num, p.name, p.constructer_name,
		p.designer_name, p.superviser_name,
		p.address, p.type, p.scale, p.bid_duration, p.file_status, p.collapse_status,
		p.cst_create, p.cst_modified, p.bid_price, p.memo, p.is_del
		from project p,(select distinct p2.id from project p2 join
		project_team pt on
		pt.staff_id= #{staffId,jdbcType=BIGINT} and pt.project_id=p2.id
		and
		p2.company_id=#{companyId,jdbcType=BIGINT} and p2.file_status=#{fileStatus,jdbcType=VARCHAR} and p2.is_del=false
		order
		by id desc limit #{page.frontIndex},#{page.size})temp where p.id=temp.id order by p.id desc
	</select>

	<!-- 获取指定年份员工所属项目数量 -->
	<select id="countByYearEx" resultType="java.lang.Integer">
		select count(distinct p.id) from project p join project_team pt on
		pt.staff_id= #{staffId,jdbcType=BIGINT} and
		pt.project_id=p.id
		and p.company_id=#{companyId,jdbcType=BIGINT} and
		(p.cst_create between
		#{yearMin,jdbcType=TIMESTAMP} and #{yearMax,jdbcType=TIMESTAMP}) and p.is_del=false
	</select>

	<!-- 获取指定年份分页员工所属项目信息列表 -->
	<select id="pageByYearEx" resultMap="BaseResultMap">
		select p.id, p.company_id, p.num, p.name, p.constructer_name,
		p.designer_name, p.superviser_name,
		p.address, p.type, p.scale,
		p.bid_duration, p.file_status, p.collapse_status,
		p.cst_create, p.cst_modified, p.bid_price, p.memo, p.is_del
		from
		project p,(select distinct p2.id from project p2 join
		project_team pt on
		pt.staff_id= #{staffId,jdbcType=BIGINT} and
		pt.project_id=p2.id
		and
		p2.company_id=#{companyId,jdbcType=BIGINT} and
		(p2.cst_create
		between #{yearMin,jdbcType=TIMESTAMP} and
		#{yearMax,jdbcType=TIMESTAMP}) and p2.is_del=false order by id
		desc limit
		#{page.frontIndex},#{page.size})temp where
		p.id=temp.id order by p.id desc
	</select>
	<select id="selectListSimpleByFileStatus" resultMap="BaseResultMap">
		select id, company_id, num, name, constructer_name, designer_name, superviser_name,
		address, type, scale, bid_duration, file_status, collapse_status, cst_create, cst_modified,
		bid_price, memo, is_del
		from project where company_id=#{companyId, jdbcType=BIGINT} and file_status=#{fileStatus,jdbcType=VARCHAR} and
		is_del=false
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.warmheart.workerunion.server.dao.AttachmentMapper">
	<resultMap id="BaseResultMap" type="top.warmheart.workerunion.server.model.Attachment">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="content_type" jdbcType="VARCHAR" property="contentType" />
		<result column="size" jdbcType="BIGINT" property="size" />
		<result column="path" jdbcType="VARCHAR" property="path" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="staff_id" jdbcType="BIGINT" property="staffId" />
		<result column="staff_name" jdbcType="VARCHAR" property="staffName" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<resultMap id="AttachmentDtoMap" type="top.warmheart.workerunion.server.dto.AttachmentDto">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="content_type" jdbcType="VARCHAR" property="contentType" />
		<result column="size" jdbcType="BIGINT" property="size" />
		<result column="path" jdbcType="VARCHAR" property="path" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="staff_id" jdbcType="BIGINT" property="staffId" />
		<result column="staff_name" jdbcType="VARCHAR" property="staffName" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
		<result column="audit_status" jdbcType="VARCHAR" property="auditStatus" />
		<result column="audit_opinion" jdbcType="VARCHAR" property="auditOpinion" />
	</resultMap>
	<resultMap id="Attachment2DtoMap" type="top.warmheart.workerunion.server.dto.Attachment2Dto">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="project_num" jdbcType="VARCHAR" property="projectNum" />
		<result column="project_name" jdbcType="VARCHAR" property="projectName" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="content_type" jdbcType="VARCHAR" property="contentType" />
		<result column="size" jdbcType="BIGINT" property="size" />
		<result column="path" jdbcType="VARCHAR" property="path" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="staff_id" jdbcType="BIGINT" property="staffId" />
		<result column="staff_name" jdbcType="VARCHAR" property="staffName" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
		<result column="is_del" jdbcType="BIT" property="del" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigInteger">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		delete from attachment
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="top.warmheart.workerunion.server.model.Attachment">
		<selectKey keyProperty="id" order="AFTER" resultType="java.math.BigInteger">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into attachment (company_id, project_id, name,
		content_type, size, path,
		type, staff_id, staff_name,
		cst_create,
		cst_modified, is_del
		)
		values (#{companyId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
		#{contentType,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, #{path,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{staffId,jdbcType=BIGINT}, #{staffName,jdbcType=VARCHAR},
		now(), now(), false
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="top.warmheart.workerunion.server.model.Attachment">
		update attachment
		set company_id = #{companyId,jdbcType=BIGINT},
		project_id = #{projectId,jdbcType=BIGINT},
		name = #{name,jdbcType=VARCHAR},
		content_type =
		#{contentType,jdbcType=VARCHAR},
		size = #{size,jdbcType=BIGINT},
		path = #{path,jdbcType=VARCHAR},
		type =
		#{type,jdbcType=VARCHAR},
		staff_id = #{staffId,jdbcType=BIGINT},
		staff_name = #{staffName,jdbcType=VARCHAR},
		cst_modified = now()
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, project_id, name, content_type, size, path, type, staff_id,
		staff_name, cst_create,
		cst_modified, is_del
		from attachment
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAuditByPrimaryKey" resultMap="AttachmentDtoMap">
		select a.id, a.company_id, a.project_id, a.name,
		a.content_type,
		a.size, a.path, a.type, a.staff_id,
		a.staff_name, a.cst_create, a.cst_modified, a.is_del,
		ifnull(au.status,
		#{defaultAuditStatus,jdbcType=VARCHAR}) as audit_status,
		ifnull(au.opinion,"") as audit_opinion
		from attachment a left
		join attachment_audit au on au.attachment_id=a.id
		where a.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, project_id, name, content_type, size, path, type, staff_id,
		staff_name, cst_create,
		cst_modified, is_del
		from attachment
	</select>

	<select id="selectListByProjectType" resultMap="BaseResultMap">
		select id, company_id, project_id, name, content_type, size,
		path, type, staff_id,
		staff_name, cst_create,
		cst_modified, is_del
		from attachment where project_id=#{projectId,
		jdbcType=BIGINT} and type=#{type, jdbcType=VARCHAR} and is_del=false
	</select>
	<!-- 根据ID删除附件信息 -->
	<update id="deleteById">
		update attachment set is_del=true , cst_modified = now() where id=#{id,jdbcType=BIGINT} and
		is_del=false and not exists (select * from attachment_audit where attachment_id=#{id,jdbcType=BIGINT} and
		status=#{statusPass, jdbcType=VARCHAR})
	</update>

	<!-- 根据类型获取附件信息 -->
	<select id="selectLatestByType" resultMap="BaseResultMap">
		select id, company_id, project_id, name, content_type, size, path,
		type, staff_id,
		staff_name, cst_create, cst_modified, is_del
		from attachment where
		project_id=#{projectId,jdbcType=BIGINT} and type=#{type,jdbcType=VARCHAR} and is_del=false order by id desc limit
		1
	</select>

	<!-- 根据类型获取附件信息 -->
	<select id="selectByType4Update" resultMap="BaseResultMap">
		select id, company_id, project_id, name, content_type, size, path,
		type, staff_id,
		staff_name, cst_create, cst_modified, is_del
		from attachment where
		project_id=#{projectId,jdbcType=BIGINT} and type=#{type,jdbcType=VARCHAR} and is_del=false for update
	</select>

	<select id="selectListAuditAttachment" resultMap="AttachmentDtoMap">
		select a.id, a.company_id, a.project_id, a.name,
		a.content_type, a.size, a.path, a.type, a.staff_id,
		a.staff_name, a.cst_create, a.cst_modified, a.is_del,
		ifnull(au.status, #{defaultAuditStatus,jdbcType=VARCHAR}) as audit_status,
		ifnull(au.opinion,"") as audit_opinion
		from
		attachment a left join attachment_audit au on
		au.attachment_id=a.id where
		a.project_id=#{projectId,jdbcType=BIGINT} and
		a.type=#{type,jdbcType=VARCHAR} and a.is_del=false order by id desc
	</select>

	<select id="countByProjectType" resultType="java.lang.Integer">
		select count(distinct id) from attachment where
		project_id=#{projectId,jdbcType=BIGINT} and type=#{type, jdbcType=VARCHAR} and is_del=false
	</select>

	<select id="pageByProjectType" resultMap="BaseResultMap">
		select a.id, a.company_id, a.project_id, a.name, a.content_type,
		a.size, a.path,
		a.type, a.staff_id,
		a.staff_name, a.cst_create, a.cst_modified, a.is_del
		from attachment a,(select
		distinct id
		from attachment where
		project_id=#{projectId,jdbcType=BIGINT} and type=#{type, jdbcType=VARCHAR} and
		is_del=false order
		by id
		desc limit
		#{page.frontIndex},#{page.size})temp where a.id=temp.id order by id desc
	</select>

	<select id="pageAuditByProjectType" resultMap="AttachmentDtoMap">
		select a.id, a.company_id, a.project_id, a.name, a.content_type,
		a.size, a.path,
		a.type, a.staff_id,
		a.staff_name,
		a.cst_create, a.cst_modified, a.is_del,
		ifnull(au.status,
		#{defaultAuditStatus,jdbcType=VARCHAR}) as audit_status,
		ifnull(au.opinion,"") as audit_opinion
		from attachment a left
		join attachment_audit au on
		au.attachment_id=a.id,(select
		id
		from attachment where
		project_id=#{projectId,jdbcType=BIGINT} and type=#{type, jdbcType=VARCHAR} and is_del=false
		order
		by id
		desc limit
		#{page.frontIndex},#{page.size})temp where a.id=temp.id order by id desc
	</select>
	<select id="selectListUndeterminedByTypeInCompany" resultMap="Attachment2DtoMap">
		select a.id, a.company_id, a.project_id, a.name,
		a.content_type, a.size, a.path, a.type, a.staff_id,
		a.staff_name, a.cst_create, a.cst_modified, a.is_del, p.num as
		project_num, p.name as project_name
		from
		attachment a join project p on p.id=a.project_id left join attachment_audit au
		on au.attachment_id=a.id where
		a.company_id=#{companyId,jdbcType=BIGINT} and
		a.type=#{type,jdbcType=VARCHAR} and
		a.is_del=false and (au.status=#{undeterminedStatus, jdbcType=VARCHAR} or au.status is null) order by id desc
	</select>

</mapper>
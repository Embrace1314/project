<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.warmheart.workerunion.server.dao.FundPlanItemMapper">
	<resultMap id="BaseResultMap" type="top.warmheart.workerunion.server.model.FundPlanItem">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="purchase_item_id" jdbcType="BIGINT" property="purchaseItemId" />
		<result column="purchase_item_name" jdbcType="VARCHAR" property="purchaseItemName" />
		<result column="cost_analysis_item_deepen_id" jdbcType="BIGINT" property="costAnalysisItemDeepenId" />
		<result column="requirement" jdbcType="VARCHAR" property="requirement" />
		<result column="money" jdbcType="DECIMAL" property="money" />
		<result column="expected_purchase_date" jdbcType="DATE" property="expectedPurchaseDate" />
		<result column="expected_service_date" jdbcType="DATE" property="expectedServiceDate" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
	</resultMap>
	<resultMap id="FundPlanItemDtoMap" type="top.warmheart.workerunion.server.dto.FundPlanItemDto">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="purchase_item_id" jdbcType="BIGINT" property="purchaseItemId" />
		<result column="purchase_item_name" jdbcType="VARCHAR" property="purchaseItemName" />
		<result column="cost_analysis_item_deepen_id" jdbcType="BIGINT" property="costAnalysisItemDeepenId" />
		<result column="cost_analysis_item_deepen_name" jdbcType="VARCHAR" property="costAnalysisItemDeepenName" />
		<result column="requirement" jdbcType="VARCHAR" property="requirement" />
		<result column="money" jdbcType="DECIMAL" property="money" />
		<result column="expected_purchase_date" jdbcType="DATE" property="expectedPurchaseDate" />
		<result column="expected_service_date" jdbcType="DATE" property="expectedServiceDate" />
		<result column="cst_create" jdbcType="TIMESTAMP" property="cstCreate" />
		<result column="cst_modified" jdbcType="TIMESTAMP" property="cstModified" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigInteger">
		delete from fund_plan_item
		where id = #{id,jdbcType=BIGINT} and not exists (select * from resource_implement_item rii where
		rii.fund_plan_item_id=#{id,jdbcType=BIGINT})
	</delete>
	<insert id="insert" parameterType="top.warmheart.workerunion.server.model.FundPlanItem">
		<selectKey keyProperty="id" order="AFTER" resultType="java.math.BigInteger">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into fund_plan_item (company_id, project_id, purchase_item_id,
		purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date,
		expected_service_date, cst_create, cst_modified)
		values (#{companyId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{purchaseItemId,jdbcType=BIGINT},
		#{purchaseItemName,jdbcType=VARCHAR}, #{costAnalysisItemDeepenId,jdbcType=BIGINT},
		#{requirement,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{expectedPurchaseDate,jdbcType=DATE},
		#{expectedServiceDate,jdbcType=DATE}, now(), now())
	</insert>
	<update id="updateByPrimaryKey" parameterType="top.warmheart.workerunion.server.model.FundPlanItem">
		update fund_plan_item
		set company_id = #{companyId,jdbcType=BIGINT},
		project_id = #{projectId,jdbcType=BIGINT},
		purchase_item_id = #{purchaseItemId,jdbcType=BIGINT},
		purchase_item_name = #{purchaseItemName,jdbcType=VARCHAR},
		cost_analysis_item_deepen_id = #{costAnalysisItemDeepenId,jdbcType=BIGINT},
		requirement = #{requirement,jdbcType=VARCHAR},
		money = #{money,jdbcType=DECIMAL},
		expected_purchase_date = #{expectedPurchaseDate,jdbcType=DATE},
		expected_service_date = #{expectedServiceDate,jdbcType=DATE},
		cst_modified = now()
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey4Update" parameterType="java.math.BigInteger" resultMap="BaseResultMap">
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item
		where id = #{id,jdbcType=BIGINT} for update
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item
	</select>
	<select id="selectListByProjectId" resultMap="FundPlanItemDtoMap">
		select fpi.id, fpi.company_id, fpi.project_id, fpi.purchase_item_id, fpi.purchase_item_name,
		fpi.cost_analysis_item_deepen_id,
		fpi.requirement, fpi.money, fpi.expected_purchase_date, fpi.expected_service_date, fpi.cst_create, fpi.cst_modified, caid.name as
		cost_analysis_item_deepen_name
		from fund_plan_item fpi join cost_analysis_item_deepen caid on caid.id=fpi.cost_analysis_item_deepen_id where
		fpi.project_id=#{projectId,jdbcType=BIGINT}
	</select>
	<select id="selectSimpleListByProjectId" resultMap="FundPlanItemDtoMap">
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item where project_id=#{projectId,jdbcType=BIGINT}
	</select>
	<select id="selectListByCostAnalysisItemId" resultMap="FundPlanItemDtoMap">
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item where cost_analysis_item_deepen_id=#{costAnalysisItemId,jdbcType=BIGINT}
	</select>
	<select id="selectListSimpleByProjectId" resultMap="BaseResultMap">
		select id, company_id, project_id, purchase_item_id, purchase_item_name, cost_analysis_item_deepen_id,
		requirement, money, expected_purchase_date, expected_service_date, cst_create, cst_modified
		from fund_plan_item where project_id=#{projectId,jdbcType=BIGINT}
	</select>
</mapper>